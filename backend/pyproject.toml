[project]
authors = [
    {name = "Admin", email = "admin@example.com"},
]
requires-python = ">=3.10"
dependencies = [
    "uvicorn<1.0.0,>=0.18.3",
    "fastapi<1.0.0,>=0.82.0",
    "python-multipart<1.0.0,>=0.0.20",
    "email-validator<2.0.0,>=1.2.1",
    "requests<3.0.0,>=2.28.1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "tenacity<9.0.0,>=8.0.1",
    "pydantic<2.0.0,>=1.10.2",
    "emails<1.0,>=0.6",
    "raven<7.0.0,>=6.10.0",
    "gunicorn>=20.1.0,<21.0.0",
    "jinja2<4.0.0,>=3.1.2",
    "psycopg2-binary<3.0.0,>=2.9.3",
    "alembic<2.0.0,>=1.8.1",
    "sqlalchemy<2.0.0,>=1.4.40",
    "pytest<8.0.0,>=7.1.3",
    "python-jose[cryptography]<4.0.0,>=3.3.0",
    "sentry-sdk<2.0.0,>=1.12.1",
    "asyncpg<1.0.0,>=0.27.0",
    "pytest-asyncio<1.0.0,>=0.20.3",
    "httpx>=0.23.1,<1.0.0",
    "faker<20.0.0,>=19.3.1",
    "pandas>=2.1.0,<3.0.0",
    "fuzzywuzzy>=0.18.0,<1.0.0",
    "openai>=1.64.0",
    "filetype>=1.2.0",
    "phonenumbers>=9.0.0",
    "cryptography>=44.0.1",
    "secweb>=1.18.1",
    "upstash-redis>=1.4.0",
]
name = "app"
version = "0.1.0"
description = ""

[tool.uv]
dev-dependencies = [
    "mypy<1.0,>=0.971",
    "pytest<8.0.0,>=7.1.3",
    "sqlalchemy2-stubs<1.0.0,>=0.0.2a27",
    "pytest-cov<4.0.0,>=3.0.0",
    "ruff>=0.9.7",
]

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic", "__init__.py"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException,
    "UP007",  # Prevents changing Optional[X] to X | None
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
