networks:
  app-network:
    driver: bridge

services:

  db:
    image: postgres:16
    networks:
      - app-network
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    labels:
      # This means the container will be stopped during backup to ensure
      # backup integrity.
      - docker-volume-backup.stop-during-backup=true

  backup:
    image: offen/docker-volume-backup:latest
    restart: always
    networks:
      - app-network
    depends_on:
      - db
    env_file:
      - .env
    environment:
      # Enable notification settings from environment variables
      - NOTIFICATION_URLS=${TELEGRAM_NOTIFICATION_URL:-}
      - NOTIFICATION_LEVEL=${BACKUP_NOTIFICATION_LEVEL:-error}
    volumes:
      - postgres_data:/backup/postgres:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Local path to store the backup archives
      # - ${BACKUP_ARCHIVE_PATH:-./backups}:/archive

  pgadmin:
    image: dpage/pgadmin4:latest
    networks:
      - app-network
    ports:
      - "5050:5050"
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      - PG_USERNAME=${PG_USERNAME}
      - PG_HASHED_PASSWORD=${PG_HASHED_PASSWORD}
      - 'PGADMIN_CONFIG_X_CONTENT_TYPE_OPTIONS=${PGADMIN_CONFIG_X_CONTENT_TYPE_OPTIONS:-""}'
      - 'PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=${PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION:-True}'
      - 'PGADMIN_CONFIG_X_XSS_PROTECTION=${PGADMIN_CONFIG_X_XSS_PROTECTION:-1}'
    labels:
      # Basic auth for pgadmin using the environment variables PG_USERNAME and PG_HASHED_PASSWORD
      # - traefik.http.middlewares.mybasicauth.basicauth.users=${PG_USERNAME}:${PG_HASHED_PASSWORD}

  backend:
    restart: always
    networks:
      - app-network
    ports:
      - "9000:80"
    depends_on:
      - db
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: backend.dockerfile

volumes:
  postgres_data:
  pgadmin-data: